//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BlackCat {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BlackcatKMLParserDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BlackcatKMLParserDataSet : global::System.Data.DataSet {
        
        private ElectorateMappingDataTable tableElectorateMapping;
        
        private FederalResults2004_NationalDataTable tableFederalResults2004_National;
        
        private StateResults2006_QLDDataTable tableStateResults2006_QLD;
        
        private global::System.Data.DataRelation relationFederalResults2004_NationalElectorateMapping;
        
        private global::System.Data.DataRelation relationStateResults2006_QLDElectorateMapping;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BlackcatKMLParserDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BlackcatKMLParserDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ElectorateMapping"] != null)) {
                    base.Tables.Add(new ElectorateMappingDataTable(ds.Tables["ElectorateMapping"]));
                }
                if ((ds.Tables["FederalResults2004_National"] != null)) {
                    base.Tables.Add(new FederalResults2004_NationalDataTable(ds.Tables["FederalResults2004_National"]));
                }
                if ((ds.Tables["StateResults2006_QLD"] != null)) {
                    base.Tables.Add(new StateResults2006_QLDDataTable(ds.Tables["StateResults2006_QLD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ElectorateMappingDataTable ElectorateMapping {
            get {
                return this.tableElectorateMapping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FederalResults2004_NationalDataTable FederalResults2004_National {
            get {
                return this.tableFederalResults2004_National;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StateResults2006_QLDDataTable StateResults2006_QLD {
            get {
                return this.tableStateResults2006_QLD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BlackcatKMLParserDataSet cln = ((BlackcatKMLParserDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ElectorateMapping"] != null)) {
                    base.Tables.Add(new ElectorateMappingDataTable(ds.Tables["ElectorateMapping"]));
                }
                if ((ds.Tables["FederalResults2004_National"] != null)) {
                    base.Tables.Add(new FederalResults2004_NationalDataTable(ds.Tables["FederalResults2004_National"]));
                }
                if ((ds.Tables["StateResults2006_QLD"] != null)) {
                    base.Tables.Add(new StateResults2006_QLDDataTable(ds.Tables["StateResults2006_QLD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableElectorateMapping = ((ElectorateMappingDataTable)(base.Tables["ElectorateMapping"]));
            if ((initTable == true)) {
                if ((this.tableElectorateMapping != null)) {
                    this.tableElectorateMapping.InitVars();
                }
            }
            this.tableFederalResults2004_National = ((FederalResults2004_NationalDataTable)(base.Tables["FederalResults2004_National"]));
            if ((initTable == true)) {
                if ((this.tableFederalResults2004_National != null)) {
                    this.tableFederalResults2004_National.InitVars();
                }
            }
            this.tableStateResults2006_QLD = ((StateResults2006_QLDDataTable)(base.Tables["StateResults2006_QLD"]));
            if ((initTable == true)) {
                if ((this.tableStateResults2006_QLD != null)) {
                    this.tableStateResults2006_QLD.InitVars();
                }
            }
            this.relationFederalResults2004_NationalElectorateMapping = this.Relations["FederalResults2004_NationalElectorateMapping"];
            this.relationStateResults2006_QLDElectorateMapping = this.Relations["StateResults2006_QLDElectorateMapping"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BlackcatKMLParserDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BlackcatKMLParserDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableElectorateMapping = new ElectorateMappingDataTable();
            base.Tables.Add(this.tableElectorateMapping);
            this.tableFederalResults2004_National = new FederalResults2004_NationalDataTable();
            base.Tables.Add(this.tableFederalResults2004_National);
            this.tableStateResults2006_QLD = new StateResults2006_QLDDataTable();
            base.Tables.Add(this.tableStateResults2006_QLD);
            this.relationFederalResults2004_NationalElectorateMapping = new global::System.Data.DataRelation("FederalResults2004_NationalElectorateMapping", new global::System.Data.DataColumn[] {
                        this.tableFederalResults2004_National.FederalElectorateNameColumn}, new global::System.Data.DataColumn[] {
                        this.tableElectorateMapping.FederalElectorateNameColumn}, false);
            this.Relations.Add(this.relationFederalResults2004_NationalElectorateMapping);
            this.relationStateResults2006_QLDElectorateMapping = new global::System.Data.DataRelation("StateResults2006_QLDElectorateMapping", new global::System.Data.DataColumn[] {
                        this.tableStateResults2006_QLD.StateElectorateNameColumn}, new global::System.Data.DataColumn[] {
                        this.tableElectorateMapping.StateElectorateNameColumn}, false);
            this.Relations.Add(this.relationStateResults2006_QLDElectorateMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeElectorateMapping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFederalResults2004_National() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStateResults2006_QLD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BlackcatKMLParserDataSet ds = new BlackcatKMLParserDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ElectorateMappingRowChangeEventHandler(object sender, ElectorateMappingRowChangeEvent e);
        
        public delegate void FederalResults2004_NationalRowChangeEventHandler(object sender, FederalResults2004_NationalRowChangeEvent e);
        
        public delegate void StateResults2006_QLDRowChangeEventHandler(object sender, StateResults2006_QLDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ElectorateMappingDataTable : global::System.Data.TypedTableBase<ElectorateMappingRow> {
            
            private global::System.Data.DataColumn columnFederalElectorateName;
            
            private global::System.Data.DataColumn columnStateElectorateName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingDataTable() {
                this.TableName = "ElectorateMapping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ElectorateMappingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ElectorateMappingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FederalElectorateNameColumn {
                get {
                    return this.columnFederalElectorateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateElectorateNameColumn {
                get {
                    return this.columnStateElectorateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow this[int index] {
                get {
                    return ((ElectorateMappingRow)(this.Rows[index]));
                }
            }
            
            public event ElectorateMappingRowChangeEventHandler ElectorateMappingRowChanging;
            
            public event ElectorateMappingRowChangeEventHandler ElectorateMappingRowChanged;
            
            public event ElectorateMappingRowChangeEventHandler ElectorateMappingRowDeleting;
            
            public event ElectorateMappingRowChangeEventHandler ElectorateMappingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddElectorateMappingRow(ElectorateMappingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow AddElectorateMappingRow(FederalResults2004_NationalRow parentFederalResults2004_NationalRowByFederalResults2004_NationalElectorateMapping, StateResults2006_QLDRow parentStateResults2006_QLDRowByStateResults2006_QLDElectorateMapping) {
                ElectorateMappingRow rowElectorateMappingRow = ((ElectorateMappingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentFederalResults2004_NationalRowByFederalResults2004_NationalElectorateMapping != null)) {
                    columnValuesArray[0] = parentFederalResults2004_NationalRowByFederalResults2004_NationalElectorateMapping[0];
                }
                if ((parentStateResults2006_QLDRowByStateResults2006_QLDElectorateMapping != null)) {
                    columnValuesArray[1] = parentStateResults2006_QLDRowByStateResults2006_QLDElectorateMapping[0];
                }
                rowElectorateMappingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowElectorateMappingRow);
                return rowElectorateMappingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow FindByFederalElectorateNameStateElectorateName(string FederalElectorateName, string StateElectorateName) {
                return ((ElectorateMappingRow)(this.Rows.Find(new object[] {
                            FederalElectorateName,
                            StateElectorateName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ElectorateMappingDataTable cln = ((ElectorateMappingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ElectorateMappingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFederalElectorateName = base.Columns["FederalElectorateName"];
                this.columnStateElectorateName = base.Columns["StateElectorateName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFederalElectorateName = new global::System.Data.DataColumn("FederalElectorateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFederalElectorateName);
                this.columnStateElectorateName = new global::System.Data.DataColumn("StateElectorateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateElectorateName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFederalElectorateName,
                                this.columnStateElectorateName}, true));
                this.columnFederalElectorateName.AllowDBNull = false;
                this.columnFederalElectorateName.MaxLength = 255;
                this.columnStateElectorateName.AllowDBNull = false;
                this.columnStateElectorateName.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow NewElectorateMappingRow() {
                return ((ElectorateMappingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ElectorateMappingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ElectorateMappingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ElectorateMappingRowChanged != null)) {
                    this.ElectorateMappingRowChanged(this, new ElectorateMappingRowChangeEvent(((ElectorateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ElectorateMappingRowChanging != null)) {
                    this.ElectorateMappingRowChanging(this, new ElectorateMappingRowChangeEvent(((ElectorateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ElectorateMappingRowDeleted != null)) {
                    this.ElectorateMappingRowDeleted(this, new ElectorateMappingRowChangeEvent(((ElectorateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ElectorateMappingRowDeleting != null)) {
                    this.ElectorateMappingRowDeleting(this, new ElectorateMappingRowChangeEvent(((ElectorateMappingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveElectorateMappingRow(ElectorateMappingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BlackcatKMLParserDataSet ds = new BlackcatKMLParserDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ElectorateMappingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FederalResults2004_NationalDataTable : global::System.Data.TypedTableBase<FederalResults2004_NationalRow> {
            
            private global::System.Data.DataColumn columnFederalElectorateName;
            
            private global::System.Data.DataColumn columnDivisionID;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnFirstPref_ALP_Percent;
            
            private global::System.Data.DataColumn columnFirstPref_LP_Percent;
            
            private global::System.Data.DataColumn columnFirstPref_NP_Percent;
            
            private global::System.Data.DataColumn columnFirstPref_DEM_Percent;
            
            private global::System.Data.DataColumn columnFirstPref_GRN_Percent;
            
            private global::System.Data.DataColumn columnFirstPref_SeatWinner;
            
            private global::System.Data.DataColumn columnTPP_SeatWinner;
            
            private global::System.Data.DataColumn columnLP_Votes;
            
            private global::System.Data.DataColumn columnALP_Votes;
            
            private global::System.Data.DataColumn columnSwing;
            
            private global::System.Data.DataColumn columnUpper50_TPP_SeatWinner_Percent;
            
            private global::System.Data.DataColumn columnElectedCandidateFirstN;
            
            private global::System.Data.DataColumn columnElectedCandidateLastN;
            
            private global::System.Data.DataColumn columnHeldSince;
            
            private global::System.Data.DataColumn columnPreviouslyHeld;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalDataTable() {
                this.TableName = "FederalResults2004_National";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FederalResults2004_NationalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FederalResults2004_NationalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FederalElectorateNameColumn {
                get {
                    return this.columnFederalElectorateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionIDColumn {
                get {
                    return this.columnDivisionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_ALP_PercentColumn {
                get {
                    return this.columnFirstPref_ALP_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_LP_PercentColumn {
                get {
                    return this.columnFirstPref_LP_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_NP_PercentColumn {
                get {
                    return this.columnFirstPref_NP_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_DEM_PercentColumn {
                get {
                    return this.columnFirstPref_DEM_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_GRN_PercentColumn {
                get {
                    return this.columnFirstPref_GRN_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPref_SeatWinnerColumn {
                get {
                    return this.columnFirstPref_SeatWinner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_SeatWinnerColumn {
                get {
                    return this.columnTPP_SeatWinner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LP_VotesColumn {
                get {
                    return this.columnLP_Votes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALP_VotesColumn {
                get {
                    return this.columnALP_Votes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwingColumn {
                get {
                    return this.columnSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Upper50_TPP_SeatWinner_PercentColumn {
                get {
                    return this.columnUpper50_TPP_SeatWinner_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElectedCandidateFirstNColumn {
                get {
                    return this.columnElectedCandidateFirstN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElectedCandidateLastNColumn {
                get {
                    return this.columnElectedCandidateLastN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeldSinceColumn {
                get {
                    return this.columnHeldSince;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreviouslyHeldColumn {
                get {
                    return this.columnPreviouslyHeld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow this[int index] {
                get {
                    return ((FederalResults2004_NationalRow)(this.Rows[index]));
                }
            }
            
            public event FederalResults2004_NationalRowChangeEventHandler FederalResults2004_NationalRowChanging;
            
            public event FederalResults2004_NationalRowChangeEventHandler FederalResults2004_NationalRowChanged;
            
            public event FederalResults2004_NationalRowChangeEventHandler FederalResults2004_NationalRowDeleting;
            
            public event FederalResults2004_NationalRowChangeEventHandler FederalResults2004_NationalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFederalResults2004_NationalRow(FederalResults2004_NationalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow AddFederalResults2004_NationalRow(
                        string FederalElectorateName, 
                        short DivisionID, 
                        string State, 
                        decimal FirstPref_ALP_Percent, 
                        decimal FirstPref_LP_Percent, 
                        decimal FirstPref_NP_Percent, 
                        decimal FirstPref_DEM_Percent, 
                        decimal FirstPref_GRN_Percent, 
                        string FirstPref_SeatWinner, 
                        string TPP_SeatWinner, 
                        int LP_Votes, 
                        int ALP_Votes, 
                        decimal Swing, 
                        decimal Upper50_TPP_SeatWinner_Percent, 
                        string ElectedCandidateFirstN, 
                        string ElectedCandidateLastN, 
                        short HeldSince, 
                        string PreviouslyHeld) {
                FederalResults2004_NationalRow rowFederalResults2004_NationalRow = ((FederalResults2004_NationalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FederalElectorateName,
                        DivisionID,
                        State,
                        FirstPref_ALP_Percent,
                        FirstPref_LP_Percent,
                        FirstPref_NP_Percent,
                        FirstPref_DEM_Percent,
                        FirstPref_GRN_Percent,
                        FirstPref_SeatWinner,
                        TPP_SeatWinner,
                        LP_Votes,
                        ALP_Votes,
                        Swing,
                        Upper50_TPP_SeatWinner_Percent,
                        ElectedCandidateFirstN,
                        ElectedCandidateLastN,
                        HeldSince,
                        PreviouslyHeld};
                rowFederalResults2004_NationalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFederalResults2004_NationalRow);
                return rowFederalResults2004_NationalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow FindByFederalElectorateName(string FederalElectorateName) {
                return ((FederalResults2004_NationalRow)(this.Rows.Find(new object[] {
                            FederalElectorateName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FederalResults2004_NationalDataTable cln = ((FederalResults2004_NationalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FederalResults2004_NationalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFederalElectorateName = base.Columns["FederalElectorateName"];
                this.columnDivisionID = base.Columns["DivisionID"];
                this.columnState = base.Columns["State"];
                this.columnFirstPref_ALP_Percent = base.Columns["FirstPref_ALP_Percent"];
                this.columnFirstPref_LP_Percent = base.Columns["FirstPref_LP_Percent"];
                this.columnFirstPref_NP_Percent = base.Columns["FirstPref_NP_Percent"];
                this.columnFirstPref_DEM_Percent = base.Columns["FirstPref_DEM_Percent"];
                this.columnFirstPref_GRN_Percent = base.Columns["FirstPref_GRN_Percent"];
                this.columnFirstPref_SeatWinner = base.Columns["FirstPref_SeatWinner"];
                this.columnTPP_SeatWinner = base.Columns["TPP_SeatWinner"];
                this.columnLP_Votes = base.Columns["LP_Votes"];
                this.columnALP_Votes = base.Columns["ALP_Votes"];
                this.columnSwing = base.Columns["Swing"];
                this.columnUpper50_TPP_SeatWinner_Percent = base.Columns["Upper50_TPP_SeatWinner_Percent"];
                this.columnElectedCandidateFirstN = base.Columns["ElectedCandidateFirstN"];
                this.columnElectedCandidateLastN = base.Columns["ElectedCandidateLastN"];
                this.columnHeldSince = base.Columns["HeldSince"];
                this.columnPreviouslyHeld = base.Columns["PreviouslyHeld"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFederalElectorateName = new global::System.Data.DataColumn("FederalElectorateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFederalElectorateName);
                this.columnDivisionID = new global::System.Data.DataColumn("DivisionID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionID);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnFirstPref_ALP_Percent = new global::System.Data.DataColumn("FirstPref_ALP_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_ALP_Percent);
                this.columnFirstPref_LP_Percent = new global::System.Data.DataColumn("FirstPref_LP_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_LP_Percent);
                this.columnFirstPref_NP_Percent = new global::System.Data.DataColumn("FirstPref_NP_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_NP_Percent);
                this.columnFirstPref_DEM_Percent = new global::System.Data.DataColumn("FirstPref_DEM_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_DEM_Percent);
                this.columnFirstPref_GRN_Percent = new global::System.Data.DataColumn("FirstPref_GRN_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_GRN_Percent);
                this.columnFirstPref_SeatWinner = new global::System.Data.DataColumn("FirstPref_SeatWinner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPref_SeatWinner);
                this.columnTPP_SeatWinner = new global::System.Data.DataColumn("TPP_SeatWinner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_SeatWinner);
                this.columnLP_Votes = new global::System.Data.DataColumn("LP_Votes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLP_Votes);
                this.columnALP_Votes = new global::System.Data.DataColumn("ALP_Votes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALP_Votes);
                this.columnSwing = new global::System.Data.DataColumn("Swing", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwing);
                this.columnUpper50_TPP_SeatWinner_Percent = new global::System.Data.DataColumn("Upper50_TPP_SeatWinner_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpper50_TPP_SeatWinner_Percent);
                this.columnElectedCandidateFirstN = new global::System.Data.DataColumn("ElectedCandidateFirstN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElectedCandidateFirstN);
                this.columnElectedCandidateLastN = new global::System.Data.DataColumn("ElectedCandidateLastN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElectedCandidateLastN);
                this.columnHeldSince = new global::System.Data.DataColumn("HeldSince", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeldSince);
                this.columnPreviouslyHeld = new global::System.Data.DataColumn("PreviouslyHeld", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviouslyHeld);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFederalElectorateName}, true));
                this.columnFederalElectorateName.AllowDBNull = false;
                this.columnFederalElectorateName.Unique = true;
                this.columnFederalElectorateName.MaxLength = 255;
                this.columnState.MaxLength = 10;
                this.columnFirstPref_SeatWinner.MaxLength = 255;
                this.columnTPP_SeatWinner.MaxLength = 10;
                this.columnElectedCandidateFirstN.MaxLength = 255;
                this.columnElectedCandidateLastN.MaxLength = 255;
                this.columnPreviouslyHeld.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow NewFederalResults2004_NationalRow() {
                return ((FederalResults2004_NationalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FederalResults2004_NationalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FederalResults2004_NationalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FederalResults2004_NationalRowChanged != null)) {
                    this.FederalResults2004_NationalRowChanged(this, new FederalResults2004_NationalRowChangeEvent(((FederalResults2004_NationalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FederalResults2004_NationalRowChanging != null)) {
                    this.FederalResults2004_NationalRowChanging(this, new FederalResults2004_NationalRowChangeEvent(((FederalResults2004_NationalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FederalResults2004_NationalRowDeleted != null)) {
                    this.FederalResults2004_NationalRowDeleted(this, new FederalResults2004_NationalRowChangeEvent(((FederalResults2004_NationalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FederalResults2004_NationalRowDeleting != null)) {
                    this.FederalResults2004_NationalRowDeleting(this, new FederalResults2004_NationalRowChangeEvent(((FederalResults2004_NationalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFederalResults2004_NationalRow(FederalResults2004_NationalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BlackcatKMLParserDataSet ds = new BlackcatKMLParserDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FederalResults2004_NationalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StateResults2006_QLDDataTable : global::System.Data.TypedTableBase<StateResults2006_QLDRow> {
            
            private global::System.Data.DataColumn columnStateElectorateName;
            
            private global::System.Data.DataColumn columnBoothsIn;
            
            private global::System.Data.DataColumn columnTPP_WinnerCandidateFirstN;
            
            private global::System.Data.DataColumn columnTPP_WinnerCandidateLastN;
            
            private global::System.Data.DataColumn columnTPP_WinnerParty;
            
            private global::System.Data.DataColumn columnTPP_WinnerVotes;
            
            private global::System.Data.DataColumn columnTPP_Winner_Percent;
            
            private global::System.Data.DataColumn columnTPP_Loser_CandidateFirstN;
            
            private global::System.Data.DataColumn columnTPP_LoserCandidateLastN;
            
            private global::System.Data.DataColumn columnTPP_LoserParty;
            
            private global::System.Data.DataColumn columnTPP_LoserVotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDDataTable() {
                this.TableName = "StateResults2006_QLD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StateResults2006_QLDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StateResults2006_QLDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateElectorateNameColumn {
                get {
                    return this.columnStateElectorateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoothsInColumn {
                get {
                    return this.columnBoothsIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_WinnerCandidateFirstNColumn {
                get {
                    return this.columnTPP_WinnerCandidateFirstN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_WinnerCandidateLastNColumn {
                get {
                    return this.columnTPP_WinnerCandidateLastN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_WinnerPartyColumn {
                get {
                    return this.columnTPP_WinnerParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_WinnerVotesColumn {
                get {
                    return this.columnTPP_WinnerVotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_Winner_PercentColumn {
                get {
                    return this.columnTPP_Winner_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_Loser_CandidateFirstNColumn {
                get {
                    return this.columnTPP_Loser_CandidateFirstN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_LoserCandidateLastNColumn {
                get {
                    return this.columnTPP_LoserCandidateLastN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_LoserPartyColumn {
                get {
                    return this.columnTPP_LoserParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPP_LoserVotesColumn {
                get {
                    return this.columnTPP_LoserVotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow this[int index] {
                get {
                    return ((StateResults2006_QLDRow)(this.Rows[index]));
                }
            }
            
            public event StateResults2006_QLDRowChangeEventHandler StateResults2006_QLDRowChanging;
            
            public event StateResults2006_QLDRowChangeEventHandler StateResults2006_QLDRowChanged;
            
            public event StateResults2006_QLDRowChangeEventHandler StateResults2006_QLDRowDeleting;
            
            public event StateResults2006_QLDRowChangeEventHandler StateResults2006_QLDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStateResults2006_QLDRow(StateResults2006_QLDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow AddStateResults2006_QLDRow(string StateElectorateName, string BoothsIn, string TPP_WinnerCandidateFirstN, string TPP_WinnerCandidateLastN, string TPP_WinnerParty, string TPP_WinnerVotes, decimal TPP_Winner_Percent, string TPP_Loser_CandidateFirstN, string TPP_LoserCandidateLastN, string TPP_LoserParty, string TPP_LoserVotes) {
                StateResults2006_QLDRow rowStateResults2006_QLDRow = ((StateResults2006_QLDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StateElectorateName,
                        BoothsIn,
                        TPP_WinnerCandidateFirstN,
                        TPP_WinnerCandidateLastN,
                        TPP_WinnerParty,
                        TPP_WinnerVotes,
                        TPP_Winner_Percent,
                        TPP_Loser_CandidateFirstN,
                        TPP_LoserCandidateLastN,
                        TPP_LoserParty,
                        TPP_LoserVotes};
                rowStateResults2006_QLDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStateResults2006_QLDRow);
                return rowStateResults2006_QLDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow FindByStateElectorateName(string StateElectorateName) {
                return ((StateResults2006_QLDRow)(this.Rows.Find(new object[] {
                            StateElectorateName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StateResults2006_QLDDataTable cln = ((StateResults2006_QLDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StateResults2006_QLDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStateElectorateName = base.Columns["StateElectorateName"];
                this.columnBoothsIn = base.Columns["BoothsIn"];
                this.columnTPP_WinnerCandidateFirstN = base.Columns["TPP_WinnerCandidateFirstN"];
                this.columnTPP_WinnerCandidateLastN = base.Columns["TPP_WinnerCandidateLastN"];
                this.columnTPP_WinnerParty = base.Columns["TPP_WinnerParty"];
                this.columnTPP_WinnerVotes = base.Columns["TPP_WinnerVotes"];
                this.columnTPP_Winner_Percent = base.Columns["TPP_Winner_Percent"];
                this.columnTPP_Loser_CandidateFirstN = base.Columns["TPP_Loser_CandidateFirstN"];
                this.columnTPP_LoserCandidateLastN = base.Columns["TPP_LoserCandidateLastN"];
                this.columnTPP_LoserParty = base.Columns["TPP_LoserParty"];
                this.columnTPP_LoserVotes = base.Columns["TPP_LoserVotes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStateElectorateName = new global::System.Data.DataColumn("StateElectorateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateElectorateName);
                this.columnBoothsIn = new global::System.Data.DataColumn("BoothsIn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoothsIn);
                this.columnTPP_WinnerCandidateFirstN = new global::System.Data.DataColumn("TPP_WinnerCandidateFirstN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_WinnerCandidateFirstN);
                this.columnTPP_WinnerCandidateLastN = new global::System.Data.DataColumn("TPP_WinnerCandidateLastN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_WinnerCandidateLastN);
                this.columnTPP_WinnerParty = new global::System.Data.DataColumn("TPP_WinnerParty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_WinnerParty);
                this.columnTPP_WinnerVotes = new global::System.Data.DataColumn("TPP_WinnerVotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_WinnerVotes);
                this.columnTPP_Winner_Percent = new global::System.Data.DataColumn("TPP_Winner_Percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_Winner_Percent);
                this.columnTPP_Loser_CandidateFirstN = new global::System.Data.DataColumn("TPP_Loser_CandidateFirstN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_Loser_CandidateFirstN);
                this.columnTPP_LoserCandidateLastN = new global::System.Data.DataColumn("TPP_LoserCandidateLastN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_LoserCandidateLastN);
                this.columnTPP_LoserParty = new global::System.Data.DataColumn("TPP_LoserParty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_LoserParty);
                this.columnTPP_LoserVotes = new global::System.Data.DataColumn("TPP_LoserVotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPP_LoserVotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStateElectorateName}, true));
                this.columnStateElectorateName.AllowDBNull = false;
                this.columnStateElectorateName.Unique = true;
                this.columnStateElectorateName.MaxLength = 255;
                this.columnBoothsIn.MaxLength = 20;
                this.columnTPP_WinnerCandidateFirstN.MaxLength = 255;
                this.columnTPP_WinnerCandidateLastN.MaxLength = 255;
                this.columnTPP_WinnerParty.MaxLength = 5;
                this.columnTPP_WinnerVotes.MaxLength = 255;
                this.columnTPP_Loser_CandidateFirstN.MaxLength = 255;
                this.columnTPP_LoserCandidateLastN.MaxLength = 255;
                this.columnTPP_LoserParty.MaxLength = 5;
                this.columnTPP_LoserVotes.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow NewStateResults2006_QLDRow() {
                return ((StateResults2006_QLDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StateResults2006_QLDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StateResults2006_QLDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StateResults2006_QLDRowChanged != null)) {
                    this.StateResults2006_QLDRowChanged(this, new StateResults2006_QLDRowChangeEvent(((StateResults2006_QLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StateResults2006_QLDRowChanging != null)) {
                    this.StateResults2006_QLDRowChanging(this, new StateResults2006_QLDRowChangeEvent(((StateResults2006_QLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StateResults2006_QLDRowDeleted != null)) {
                    this.StateResults2006_QLDRowDeleted(this, new StateResults2006_QLDRowChangeEvent(((StateResults2006_QLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StateResults2006_QLDRowDeleting != null)) {
                    this.StateResults2006_QLDRowDeleting(this, new StateResults2006_QLDRowChangeEvent(((StateResults2006_QLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStateResults2006_QLDRow(StateResults2006_QLDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BlackcatKMLParserDataSet ds = new BlackcatKMLParserDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StateResults2006_QLDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ElectorateMappingRow : global::System.Data.DataRow {
            
            private ElectorateMappingDataTable tableElectorateMapping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ElectorateMappingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableElectorateMapping = ((ElectorateMappingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FederalElectorateName {
                get {
                    return ((string)(this[this.tableElectorateMapping.FederalElectorateNameColumn]));
                }
                set {
                    this[this.tableElectorateMapping.FederalElectorateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateElectorateName {
                get {
                    return ((string)(this[this.tableElectorateMapping.StateElectorateNameColumn]));
                }
                set {
                    this[this.tableElectorateMapping.StateElectorateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow FederalResults2004_NationalRow {
                get {
                    return ((FederalResults2004_NationalRow)(this.GetParentRow(this.Table.ParentRelations["FederalResults2004_NationalElectorateMapping"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FederalResults2004_NationalElectorateMapping"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow StateResults2006_QLDRow {
                get {
                    return ((StateResults2006_QLDRow)(this.GetParentRow(this.Table.ParentRelations["StateResults2006_QLDElectorateMapping"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["StateResults2006_QLDElectorateMapping"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FederalResults2004_NationalRow : global::System.Data.DataRow {
            
            private FederalResults2004_NationalDataTable tableFederalResults2004_National;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FederalResults2004_NationalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFederalResults2004_National = ((FederalResults2004_NationalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FederalElectorateName {
                get {
                    return ((string)(this[this.tableFederalResults2004_National.FederalElectorateNameColumn]));
                }
                set {
                    this[this.tableFederalResults2004_National.FederalElectorateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DivisionID {
                get {
                    try {
                        return ((short)(this[this.tableFederalResults2004_National.DivisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionID\' in table \'FederalResults2004_National\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.DivisionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'FederalResults2004_National\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirstPref_ALP_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.FirstPref_ALP_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_ALP_Percent\' in table \'FederalResults2004_Nationa" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_ALP_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirstPref_LP_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.FirstPref_LP_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_LP_Percent\' in table \'FederalResults2004_National" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_LP_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirstPref_NP_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.FirstPref_NP_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_NP_Percent\' in table \'FederalResults2004_National" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_NP_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirstPref_DEM_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.FirstPref_DEM_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_DEM_Percent\' in table \'FederalResults2004_Nationa" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_DEM_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirstPref_GRN_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.FirstPref_GRN_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_GRN_Percent\' in table \'FederalResults2004_Nationa" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_GRN_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstPref_SeatWinner {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.FirstPref_SeatWinnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPref_SeatWinner\' in table \'FederalResults2004_National" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.FirstPref_SeatWinnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_SeatWinner {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.TPP_SeatWinnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_SeatWinner\' in table \'FederalResults2004_National\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.TPP_SeatWinnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LP_Votes {
                get {
                    try {
                        return ((int)(this[this.tableFederalResults2004_National.LP_VotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LP_Votes\' in table \'FederalResults2004_National\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.LP_VotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ALP_Votes {
                get {
                    try {
                        return ((int)(this[this.tableFederalResults2004_National.ALP_VotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ALP_Votes\' in table \'FederalResults2004_National\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.ALP_VotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Swing {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.SwingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Swing\' in table \'FederalResults2004_National\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.SwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Upper50_TPP_SeatWinner_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableFederalResults2004_National.Upper50_TPP_SeatWinner_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Upper50_TPP_SeatWinner_Percent\' in table \'FederalResults200" +
                                "4_National\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.Upper50_TPP_SeatWinner_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElectedCandidateFirstN {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.ElectedCandidateFirstNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElectedCandidateFirstN\' in table \'FederalResults2004_Nation" +
                                "al\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.ElectedCandidateFirstNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElectedCandidateLastN {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.ElectedCandidateLastNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElectedCandidateLastN\' in table \'FederalResults2004_Nationa" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.ElectedCandidateLastNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short HeldSince {
                get {
                    try {
                        return ((short)(this[this.tableFederalResults2004_National.HeldSinceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeldSince\' in table \'FederalResults2004_National\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.HeldSinceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PreviouslyHeld {
                get {
                    try {
                        return ((string)(this[this.tableFederalResults2004_National.PreviouslyHeldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviouslyHeld\' in table \'FederalResults2004_National\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFederalResults2004_National.PreviouslyHeldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionIDNull() {
                return this.IsNull(this.tableFederalResults2004_National.DivisionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionIDNull() {
                this[this.tableFederalResults2004_National.DivisionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableFederalResults2004_National.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableFederalResults2004_National.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_ALP_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_ALP_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_ALP_PercentNull() {
                this[this.tableFederalResults2004_National.FirstPref_ALP_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_LP_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_LP_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_LP_PercentNull() {
                this[this.tableFederalResults2004_National.FirstPref_LP_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_NP_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_NP_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_NP_PercentNull() {
                this[this.tableFederalResults2004_National.FirstPref_NP_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_DEM_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_DEM_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_DEM_PercentNull() {
                this[this.tableFederalResults2004_National.FirstPref_DEM_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_GRN_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_GRN_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_GRN_PercentNull() {
                this[this.tableFederalResults2004_National.FirstPref_GRN_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPref_SeatWinnerNull() {
                return this.IsNull(this.tableFederalResults2004_National.FirstPref_SeatWinnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPref_SeatWinnerNull() {
                this[this.tableFederalResults2004_National.FirstPref_SeatWinnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_SeatWinnerNull() {
                return this.IsNull(this.tableFederalResults2004_National.TPP_SeatWinnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_SeatWinnerNull() {
                this[this.tableFederalResults2004_National.TPP_SeatWinnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLP_VotesNull() {
                return this.IsNull(this.tableFederalResults2004_National.LP_VotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLP_VotesNull() {
                this[this.tableFederalResults2004_National.LP_VotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALP_VotesNull() {
                return this.IsNull(this.tableFederalResults2004_National.ALP_VotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALP_VotesNull() {
                this[this.tableFederalResults2004_National.ALP_VotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwingNull() {
                return this.IsNull(this.tableFederalResults2004_National.SwingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwingNull() {
                this[this.tableFederalResults2004_National.SwingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpper50_TPP_SeatWinner_PercentNull() {
                return this.IsNull(this.tableFederalResults2004_National.Upper50_TPP_SeatWinner_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpper50_TPP_SeatWinner_PercentNull() {
                this[this.tableFederalResults2004_National.Upper50_TPP_SeatWinner_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElectedCandidateFirstNNull() {
                return this.IsNull(this.tableFederalResults2004_National.ElectedCandidateFirstNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElectedCandidateFirstNNull() {
                this[this.tableFederalResults2004_National.ElectedCandidateFirstNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElectedCandidateLastNNull() {
                return this.IsNull(this.tableFederalResults2004_National.ElectedCandidateLastNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElectedCandidateLastNNull() {
                this[this.tableFederalResults2004_National.ElectedCandidateLastNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeldSinceNull() {
                return this.IsNull(this.tableFederalResults2004_National.HeldSinceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeldSinceNull() {
                this[this.tableFederalResults2004_National.HeldSinceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreviouslyHeldNull() {
                return this.IsNull(this.tableFederalResults2004_National.PreviouslyHeldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreviouslyHeldNull() {
                this[this.tableFederalResults2004_National.PreviouslyHeldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow[] GetElectorateMappingRows() {
                if ((this.Table.ChildRelations["FederalResults2004_NationalElectorateMapping"] == null)) {
                    return new ElectorateMappingRow[0];
                }
                else {
                    return ((ElectorateMappingRow[])(base.GetChildRows(this.Table.ChildRelations["FederalResults2004_NationalElectorateMapping"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StateResults2006_QLDRow : global::System.Data.DataRow {
            
            private StateResults2006_QLDDataTable tableStateResults2006_QLD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StateResults2006_QLDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStateResults2006_QLD = ((StateResults2006_QLDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateElectorateName {
                get {
                    return ((string)(this[this.tableStateResults2006_QLD.StateElectorateNameColumn]));
                }
                set {
                    this[this.tableStateResults2006_QLD.StateElectorateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BoothsIn {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.BoothsInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoothsIn\' in table \'StateResults2006_QLD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.BoothsInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_WinnerCandidateFirstN {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_WinnerCandidateFirstNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_WinnerCandidateFirstN\' in table \'StateResults2006_QLD\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_WinnerCandidateFirstNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_WinnerCandidateLastN {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_WinnerCandidateLastNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_WinnerCandidateLastN\' in table \'StateResults2006_QLD\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_WinnerCandidateLastNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_WinnerParty {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_WinnerPartyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_WinnerParty\' in table \'StateResults2006_QLD\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_WinnerPartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_WinnerVotes {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_WinnerVotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_WinnerVotes\' in table \'StateResults2006_QLD\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_WinnerVotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TPP_Winner_Percent {
                get {
                    try {
                        return ((decimal)(this[this.tableStateResults2006_QLD.TPP_Winner_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_Winner_Percent\' in table \'StateResults2006_QLD\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_Winner_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_Loser_CandidateFirstN {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_Loser_CandidateFirstNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_Loser_CandidateFirstN\' in table \'StateResults2006_QLD\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_Loser_CandidateFirstNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_LoserCandidateLastN {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_LoserCandidateLastNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_LoserCandidateLastN\' in table \'StateResults2006_QLD\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_LoserCandidateLastNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_LoserParty {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_LoserPartyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_LoserParty\' in table \'StateResults2006_QLD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_LoserPartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPP_LoserVotes {
                get {
                    try {
                        return ((string)(this[this.tableStateResults2006_QLD.TPP_LoserVotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPP_LoserVotes\' in table \'StateResults2006_QLD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStateResults2006_QLD.TPP_LoserVotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoothsInNull() {
                return this.IsNull(this.tableStateResults2006_QLD.BoothsInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoothsInNull() {
                this[this.tableStateResults2006_QLD.BoothsInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_WinnerCandidateFirstNNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_WinnerCandidateFirstNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_WinnerCandidateFirstNNull() {
                this[this.tableStateResults2006_QLD.TPP_WinnerCandidateFirstNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_WinnerCandidateLastNNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_WinnerCandidateLastNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_WinnerCandidateLastNNull() {
                this[this.tableStateResults2006_QLD.TPP_WinnerCandidateLastNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_WinnerPartyNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_WinnerPartyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_WinnerPartyNull() {
                this[this.tableStateResults2006_QLD.TPP_WinnerPartyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_WinnerVotesNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_WinnerVotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_WinnerVotesNull() {
                this[this.tableStateResults2006_QLD.TPP_WinnerVotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_Winner_PercentNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_Winner_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_Winner_PercentNull() {
                this[this.tableStateResults2006_QLD.TPP_Winner_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_Loser_CandidateFirstNNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_Loser_CandidateFirstNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_Loser_CandidateFirstNNull() {
                this[this.tableStateResults2006_QLD.TPP_Loser_CandidateFirstNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_LoserCandidateLastNNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_LoserCandidateLastNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_LoserCandidateLastNNull() {
                this[this.tableStateResults2006_QLD.TPP_LoserCandidateLastNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_LoserPartyNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_LoserPartyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_LoserPartyNull() {
                this[this.tableStateResults2006_QLD.TPP_LoserPartyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPP_LoserVotesNull() {
                return this.IsNull(this.tableStateResults2006_QLD.TPP_LoserVotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPP_LoserVotesNull() {
                this[this.tableStateResults2006_QLD.TPP_LoserVotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow[] GetElectorateMappingRows() {
                if ((this.Table.ChildRelations["StateResults2006_QLDElectorateMapping"] == null)) {
                    return new ElectorateMappingRow[0];
                }
                else {
                    return ((ElectorateMappingRow[])(base.GetChildRows(this.Table.ChildRelations["StateResults2006_QLDElectorateMapping"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ElectorateMappingRowChangeEvent : global::System.EventArgs {
            
            private ElectorateMappingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRowChangeEvent(ElectorateMappingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ElectorateMappingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FederalResults2004_NationalRowChangeEvent : global::System.EventArgs {
            
            private FederalResults2004_NationalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRowChangeEvent(FederalResults2004_NationalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FederalResults2004_NationalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StateResults2006_QLDRowChangeEvent : global::System.EventArgs {
            
            private StateResults2006_QLDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRowChangeEvent(StateResults2006_QLDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StateResults2006_QLDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BlackCat.BlackcatKMLParserDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ElectorateMappingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ElectorateMappingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ElectorateMapping";
            tableMapping.ColumnMappings.Add("FederalElectorateName", "FederalElectorateName");
            tableMapping.ColumnMappings.Add("StateElectorateName", "StateElectorateName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `ElectorateMapping` WHERE ((`FederalElectorateName` = ?) AND (`StateE" +
                "lectorateName` = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `ElectorateMapping` (`FederalElectorateName`, `StateElectorateName`) " +
                "VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `ElectorateMapping` SET `FederalElectorateName` = ?, `StateElectorateName`" +
                " = ? WHERE ((`FederalElectorateName` = ?) AND (`StateElectorateName` = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::BlackCat.Properties.Settings.Default.BlackcatKMLParserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FederalElectorateName, StateElectorateName FROM ElectorateMapping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BlackcatKMLParserDataSet.ElectorateMappingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BlackcatKMLParserDataSet.ElectorateMappingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BlackcatKMLParserDataSet.ElectorateMappingDataTable dataTable = new BlackcatKMLParserDataSet.ElectorateMappingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet.ElectorateMappingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ElectorateMapping");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_FederalElectorateName, string Original_StateElectorateName) {
            if ((Original_FederalElectorateName == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FederalElectorateName));
            }
            if ((Original_StateElectorateName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_StateElectorateName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FederalElectorateName, string StateElectorateName) {
            if ((FederalElectorateName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FederalElectorateName));
            }
            if ((StateElectorateName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(StateElectorateName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FederalElectorateName, string StateElectorateName, string Original_FederalElectorateName, string Original_StateElectorateName) {
            if ((FederalElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FederalElectorateName));
            }
            if ((StateElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(StateElectorateName));
            }
            if ((Original_FederalElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_FederalElectorateName));
            }
            if ((Original_StateElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_StateElectorateName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_FederalElectorateName, string Original_StateElectorateName) {
            return this.Update(Original_FederalElectorateName, Original_StateElectorateName, Original_FederalElectorateName, Original_StateElectorateName);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FederalResults2004_NationalTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FederalResults2004_NationalTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FederalResults2004_National";
            tableMapping.ColumnMappings.Add("FederalElectorateName", "FederalElectorateName");
            tableMapping.ColumnMappings.Add("DivisionID", "DivisionID");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("FirstPref_ALP_Percent", "FirstPref_ALP_Percent");
            tableMapping.ColumnMappings.Add("FirstPref_LP_Percent", "FirstPref_LP_Percent");
            tableMapping.ColumnMappings.Add("FirstPref_NP_Percent", "FirstPref_NP_Percent");
            tableMapping.ColumnMappings.Add("FirstPref_DEM_Percent", "FirstPref_DEM_Percent");
            tableMapping.ColumnMappings.Add("FirstPref_GRN_Percent", "FirstPref_GRN_Percent");
            tableMapping.ColumnMappings.Add("FirstPref_SeatWinner", "FirstPref_SeatWinner");
            tableMapping.ColumnMappings.Add("TPP_SeatWinner", "TPP_SeatWinner");
            tableMapping.ColumnMappings.Add("LP_Votes", "LP_Votes");
            tableMapping.ColumnMappings.Add("ALP_Votes", "ALP_Votes");
            tableMapping.ColumnMappings.Add("Swing", "Swing");
            tableMapping.ColumnMappings.Add("Upper50_TPP_SeatWinner_Percent", "Upper50_TPP_SeatWinner_Percent");
            tableMapping.ColumnMappings.Add("ElectedCandidateFirstN", "ElectedCandidateFirstN");
            tableMapping.ColumnMappings.Add("ElectedCandidateLastN", "ElectedCandidateLastN");
            tableMapping.ColumnMappings.Add("HeldSince", "HeldSince");
            tableMapping.ColumnMappings.Add("PreviouslyHeld", "PreviouslyHeld");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `FederalResults2004_National` WHERE ((`FederalElectorateName` = ?) AND ((? = 1 AND `DivisionID` IS NULL) OR (`DivisionID` = ?)) AND ((? = 1 AND `State` IS NULL) OR (`State` = ?)) AND ((? = 1 AND `FirstPref_ALP_Percent` IS NULL) OR (`FirstPref_ALP_Percent` = ?)) AND ((? = 1 AND `FirstPref_LP_Percent` IS NULL) OR (`FirstPref_LP_Percent` = ?)) AND ((? = 1 AND `FirstPref_NP_Percent` IS NULL) OR (`FirstPref_NP_Percent` = ?)) AND ((? = 1 AND `FirstPref_DEM_Percent` IS NULL) OR (`FirstPref_DEM_Percent` = ?)) AND ((? = 1 AND `FirstPref_GRN_Percent` IS NULL) OR (`FirstPref_GRN_Percent` = ?)) AND ((? = 1 AND `FirstPref_SeatWinner` IS NULL) OR (`FirstPref_SeatWinner` = ?)) AND ((? = 1 AND `TPP_SeatWinner` IS NULL) OR (`TPP_SeatWinner` = ?)) AND ((? = 1 AND `LP_Votes` IS NULL) OR (`LP_Votes` = ?)) AND ((? = 1 AND `ALP_Votes` IS NULL) OR (`ALP_Votes` = ?)) AND ((? = 1 AND `Swing` IS NULL) OR (`Swing` = ?)) AND ((? = 1 AND `Upper50_TPP_SeatWinner_Percent` IS NULL) OR (`Upper50_TPP_SeatWinner_Percent` = ?)) AND ((? = 1 AND `ElectedCandidateFirstN` IS NULL) OR (`ElectedCandidateFirstN` = ?)) AND ((? = 1 AND `ElectedCandidateLastN` IS NULL) OR (`ElectedCandidateLastN` = ?)) AND ((? = 1 AND `HeldSince` IS NULL) OR (`HeldSince` = ?)) AND ((? = 1 AND `PreviouslyHeld` IS NULL) OR (`PreviouslyHeld` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DivisionID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DivisionID", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_State", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_SeatWinner", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Swing", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Swing", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Swing", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Swing", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HeldSince", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HeldSince", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PreviouslyHeld", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PreviouslyHeld", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `FederalResults2004_National` (`FederalElectorateName`, `DivisionID`, `State`, `FirstPref_ALP_Percent`, `FirstPref_LP_Percent`, `FirstPref_NP_Percent`, `FirstPref_DEM_Percent`, `FirstPref_GRN_Percent`, `FirstPref_SeatWinner`, `TPP_SeatWinner`, `LP_Votes`, `ALP_Votes`, `Swing`, `Upper50_TPP_SeatWinner_Percent`, `ElectedCandidateFirstN`, `ElectedCandidateLastN`, `HeldSince`, `PreviouslyHeld`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DivisionID", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Swing", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Swing", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HeldSince", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PreviouslyHeld", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `FederalResults2004_National` SET `FederalElectorateName` = ?, `DivisionID" +
                "` = ?, `State` = ?, `FirstPref_ALP_Percent` = ?, `FirstPref_LP_Percent` = ?, `Fi" +
                "rstPref_NP_Percent` = ?, `FirstPref_DEM_Percent` = ?, `FirstPref_GRN_Percent` = " +
                "?, `FirstPref_SeatWinner` = ?, `TPP_SeatWinner` = ?, `LP_Votes` = ?, `ALP_Votes`" +
                " = ?, `Swing` = ?, `Upper50_TPP_SeatWinner_Percent` = ?, `ElectedCandidateFirstN" +
                "` = ?, `ElectedCandidateLastN` = ?, `HeldSince` = ?, `PreviouslyHeld` = ? WHERE " +
                "((`FederalElectorateName` = ?) AND ((? = 1 AND `DivisionID` IS NULL) OR (`Divisi" +
                "onID` = ?)) AND ((? = 1 AND `State` IS NULL) OR (`State` = ?)) AND ((? = 1 AND `" +
                "FirstPref_ALP_Percent` IS NULL) OR (`FirstPref_ALP_Percent` = ?)) AND ((? = 1 AN" +
                "D `FirstPref_LP_Percent` IS NULL) OR (`FirstPref_LP_Percent` = ?)) AND ((? = 1 A" +
                "ND `FirstPref_NP_Percent` IS NULL) OR (`FirstPref_NP_Percent` = ?)) AND ((? = 1 " +
                "AND `FirstPref_DEM_Percent` IS NULL) OR (`FirstPref_DEM_Percent` = ?)) AND ((? =" +
                " 1 AND `FirstPref_GRN_Percent` IS NULL) OR (`FirstPref_GRN_Percent` = ?)) AND ((" +
                "? = 1 AND `FirstPref_SeatWinner` IS NULL) OR (`FirstPref_SeatWinner` = ?)) AND (" +
                "(? = 1 AND `TPP_SeatWinner` IS NULL) OR (`TPP_SeatWinner` = ?)) AND ((? = 1 AND " +
                "`LP_Votes` IS NULL) OR (`LP_Votes` = ?)) AND ((? = 1 AND `ALP_Votes` IS NULL) OR" +
                " (`ALP_Votes` = ?)) AND ((? = 1 AND `Swing` IS NULL) OR (`Swing` = ?)) AND ((? =" +
                " 1 AND `Upper50_TPP_SeatWinner_Percent` IS NULL) OR (`Upper50_TPP_SeatWinner_Per" +
                "cent` = ?)) AND ((? = 1 AND `ElectedCandidateFirstN` IS NULL) OR (`ElectedCandid" +
                "ateFirstN` = ?)) AND ((? = 1 AND `ElectedCandidateLastN` IS NULL) OR (`ElectedCa" +
                "ndidateLastN` = ?)) AND ((? = 1 AND `HeldSince` IS NULL) OR (`HeldSince` = ?)) A" +
                "ND ((? = 1 AND `PreviouslyHeld` IS NULL) OR (`PreviouslyHeld` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DivisionID", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Swing", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Swing", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HeldSince", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PreviouslyHeld", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FederalElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FederalElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DivisionID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DivisionID", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DivisionID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_State", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_State", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_ALP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_ALP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_LP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_LP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_NP_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_NP_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_DEM_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_DEM_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_GRN_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "FirstPref_GRN_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FirstPref_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstPref_SeatWinner", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_SeatWinner", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_SeatWinner", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_SeatWinner", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LP_Votes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ALP_Votes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ALP_Votes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Swing", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Swing", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Swing", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Swing", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Upper50_TPP_SeatWinner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "Upper50_TPP_SeatWinner_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ElectedCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ElectedCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ElectedCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HeldSince", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HeldSince", global::System.Data.OleDb.OleDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeldSince", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PreviouslyHeld", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PreviouslyHeld", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PreviouslyHeld", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::BlackCat.Properties.Settings.Default.BlackcatKMLParserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT FederalElectorateName, DivisionID, State, FirstPref_ALP_Percent, FirstPref_LP_Percent, FirstPref_NP_Percent, FirstPref_DEM_Percent, FirstPref_GRN_Percent, FirstPref_SeatWinner, TPP_SeatWinner, LP_Votes, ALP_Votes, Swing, Upper50_TPP_SeatWinner_Percent, ElectedCandidateFirstN, ElectedCandidateLastN, HeldSince, PreviouslyHeld FROM FederalResults2004_National";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BlackcatKMLParserDataSet.FederalResults2004_NationalDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BlackcatKMLParserDataSet.FederalResults2004_NationalDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BlackcatKMLParserDataSet.FederalResults2004_NationalDataTable dataTable = new BlackcatKMLParserDataSet.FederalResults2004_NationalDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet.FederalResults2004_NationalDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FederalResults2004_National");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_FederalElectorateName, 
                    global::System.Nullable<short> Original_DivisionID, 
                    string Original_State, 
                    global::System.Nullable<decimal> Original_FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_GRN_Percent, 
                    string Original_FirstPref_SeatWinner, 
                    string Original_TPP_SeatWinner, 
                    global::System.Nullable<int> Original_LP_Votes, 
                    global::System.Nullable<int> Original_ALP_Votes, 
                    global::System.Nullable<decimal> Original_Swing, 
                    global::System.Nullable<decimal> Original_Upper50_TPP_SeatWinner_Percent, 
                    string Original_ElectedCandidateFirstN, 
                    string Original_ElectedCandidateLastN, 
                    global::System.Nullable<short> Original_HeldSince, 
                    string Original_PreviouslyHeld) {
            if ((Original_FederalElectorateName == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FederalElectorateName));
            }
            if ((Original_DivisionID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_DivisionID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_State == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_State));
            }
            if ((Original_FirstPref_ALP_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_FirstPref_ALP_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_LP_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_FirstPref_LP_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_NP_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_FirstPref_NP_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_DEM_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_FirstPref_DEM_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_GRN_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_FirstPref_GRN_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_SeatWinner == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_FirstPref_SeatWinner));
            }
            if ((Original_TPP_SeatWinner == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_TPP_SeatWinner));
            }
            if ((Original_LP_Votes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_LP_Votes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ALP_Votes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_ALP_Votes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Swing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_Swing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Upper50_TPP_SeatWinner_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_Upper50_TPP_SeatWinner_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_ElectedCandidateFirstN == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ElectedCandidateFirstN));
            }
            if ((Original_ElectedCandidateLastN == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ElectedCandidateLastN));
            }
            if ((Original_HeldSince.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((short)(Original_HeldSince.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_PreviouslyHeld == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_PreviouslyHeld));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FederalElectorateName, 
                    global::System.Nullable<short> DivisionID, 
                    string State, 
                    global::System.Nullable<decimal> FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> FirstPref_GRN_Percent, 
                    string FirstPref_SeatWinner, 
                    string TPP_SeatWinner, 
                    global::System.Nullable<int> LP_Votes, 
                    global::System.Nullable<int> ALP_Votes, 
                    global::System.Nullable<decimal> Swing, 
                    global::System.Nullable<decimal> Upper50_TPP_SeatWinner_Percent, 
                    string ElectedCandidateFirstN, 
                    string ElectedCandidateLastN, 
                    global::System.Nullable<short> HeldSince, 
                    string PreviouslyHeld) {
            if ((FederalElectorateName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FederalElectorateName));
            }
            if ((DivisionID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(DivisionID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(State));
            }
            if ((FirstPref_ALP_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(FirstPref_ALP_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_LP_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(FirstPref_LP_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_NP_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(FirstPref_NP_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_DEM_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(FirstPref_DEM_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_GRN_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(FirstPref_GRN_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_SeatWinner == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FirstPref_SeatWinner));
            }
            if ((TPP_SeatWinner == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(TPP_SeatWinner));
            }
            if ((LP_Votes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(LP_Votes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ALP_Votes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ALP_Votes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Swing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Swing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Upper50_TPP_SeatWinner_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Upper50_TPP_SeatWinner_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ElectedCandidateFirstN == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ElectedCandidateFirstN));
            }
            if ((ElectedCandidateLastN == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ElectedCandidateLastN));
            }
            if ((HeldSince.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((short)(HeldSince.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PreviouslyHeld == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(PreviouslyHeld));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FederalElectorateName, 
                    global::System.Nullable<short> DivisionID, 
                    string State, 
                    global::System.Nullable<decimal> FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> FirstPref_GRN_Percent, 
                    string FirstPref_SeatWinner, 
                    string TPP_SeatWinner, 
                    global::System.Nullable<int> LP_Votes, 
                    global::System.Nullable<int> ALP_Votes, 
                    global::System.Nullable<decimal> Swing, 
                    global::System.Nullable<decimal> Upper50_TPP_SeatWinner_Percent, 
                    string ElectedCandidateFirstN, 
                    string ElectedCandidateLastN, 
                    global::System.Nullable<short> HeldSince, 
                    string PreviouslyHeld, 
                    string Original_FederalElectorateName, 
                    global::System.Nullable<short> Original_DivisionID, 
                    string Original_State, 
                    global::System.Nullable<decimal> Original_FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_GRN_Percent, 
                    string Original_FirstPref_SeatWinner, 
                    string Original_TPP_SeatWinner, 
                    global::System.Nullable<int> Original_LP_Votes, 
                    global::System.Nullable<int> Original_ALP_Votes, 
                    global::System.Nullable<decimal> Original_Swing, 
                    global::System.Nullable<decimal> Original_Upper50_TPP_SeatWinner_Percent, 
                    string Original_ElectedCandidateFirstN, 
                    string Original_ElectedCandidateLastN, 
                    global::System.Nullable<short> Original_HeldSince, 
                    string Original_PreviouslyHeld) {
            if ((FederalElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FederalElectorateName));
            }
            if ((DivisionID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(DivisionID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((State == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(State));
            }
            if ((FirstPref_ALP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(FirstPref_ALP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_LP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(FirstPref_LP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_NP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(FirstPref_NP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_DEM_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(FirstPref_DEM_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_GRN_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(FirstPref_GRN_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FirstPref_SeatWinner == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FirstPref_SeatWinner));
            }
            if ((TPP_SeatWinner == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(TPP_SeatWinner));
            }
            if ((LP_Votes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(LP_Votes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ALP_Votes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ALP_Votes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Swing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Swing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Upper50_TPP_SeatWinner_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Upper50_TPP_SeatWinner_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ElectedCandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ElectedCandidateFirstN));
            }
            if ((ElectedCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ElectedCandidateLastN));
            }
            if ((HeldSince.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(HeldSince.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PreviouslyHeld == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(PreviouslyHeld));
            }
            if ((Original_FederalElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FederalElectorateName));
            }
            if ((Original_DivisionID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(Original_DivisionID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_State == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_State));
            }
            if ((Original_FirstPref_ALP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_FirstPref_ALP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_LP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_FirstPref_LP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_NP_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_FirstPref_NP_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_DEM_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_FirstPref_DEM_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_GRN_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_FirstPref_GRN_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstPref_SeatWinner == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_FirstPref_SeatWinner));
            }
            if ((Original_TPP_SeatWinner == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_TPP_SeatWinner));
            }
            if ((Original_LP_Votes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_LP_Votes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ALP_Votes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_ALP_Votes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Swing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_Swing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Upper50_TPP_SeatWinner_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_Upper50_TPP_SeatWinner_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_ElectedCandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ElectedCandidateFirstN));
            }
            if ((Original_ElectedCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ElectedCandidateLastN));
            }
            if ((Original_HeldSince.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((short)(Original_HeldSince.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_PreviouslyHeld == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_PreviouslyHeld));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> DivisionID, 
                    string State, 
                    global::System.Nullable<decimal> FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> FirstPref_GRN_Percent, 
                    string FirstPref_SeatWinner, 
                    string TPP_SeatWinner, 
                    global::System.Nullable<int> LP_Votes, 
                    global::System.Nullable<int> ALP_Votes, 
                    global::System.Nullable<decimal> Swing, 
                    global::System.Nullable<decimal> Upper50_TPP_SeatWinner_Percent, 
                    string ElectedCandidateFirstN, 
                    string ElectedCandidateLastN, 
                    global::System.Nullable<short> HeldSince, 
                    string PreviouslyHeld, 
                    string Original_FederalElectorateName, 
                    global::System.Nullable<short> Original_DivisionID, 
                    string Original_State, 
                    global::System.Nullable<decimal> Original_FirstPref_ALP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_LP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_NP_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_DEM_Percent, 
                    global::System.Nullable<decimal> Original_FirstPref_GRN_Percent, 
                    string Original_FirstPref_SeatWinner, 
                    string Original_TPP_SeatWinner, 
                    global::System.Nullable<int> Original_LP_Votes, 
                    global::System.Nullable<int> Original_ALP_Votes, 
                    global::System.Nullable<decimal> Original_Swing, 
                    global::System.Nullable<decimal> Original_Upper50_TPP_SeatWinner_Percent, 
                    string Original_ElectedCandidateFirstN, 
                    string Original_ElectedCandidateLastN, 
                    global::System.Nullable<short> Original_HeldSince, 
                    string Original_PreviouslyHeld) {
            return this.Update(Original_FederalElectorateName, DivisionID, State, FirstPref_ALP_Percent, FirstPref_LP_Percent, FirstPref_NP_Percent, FirstPref_DEM_Percent, FirstPref_GRN_Percent, FirstPref_SeatWinner, TPP_SeatWinner, LP_Votes, ALP_Votes, Swing, Upper50_TPP_SeatWinner_Percent, ElectedCandidateFirstN, ElectedCandidateLastN, HeldSince, PreviouslyHeld, Original_FederalElectorateName, Original_DivisionID, Original_State, Original_FirstPref_ALP_Percent, Original_FirstPref_LP_Percent, Original_FirstPref_NP_Percent, Original_FirstPref_DEM_Percent, Original_FirstPref_GRN_Percent, Original_FirstPref_SeatWinner, Original_TPP_SeatWinner, Original_LP_Votes, Original_ALP_Votes, Original_Swing, Original_Upper50_TPP_SeatWinner_Percent, Original_ElectedCandidateFirstN, Original_ElectedCandidateLastN, Original_HeldSince, Original_PreviouslyHeld);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StateResults2006_QLDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StateResults2006_QLDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StateResults2006_QLD";
            tableMapping.ColumnMappings.Add("StateElectorateName", "StateElectorateName");
            tableMapping.ColumnMappings.Add("BoothsIn", "BoothsIn");
            tableMapping.ColumnMappings.Add("TPP_WinnerCandidateFirstN", "TPP_WinnerCandidateFirstN");
            tableMapping.ColumnMappings.Add("TPP_WinnerCandidateLastN", "TPP_WinnerCandidateLastN");
            tableMapping.ColumnMappings.Add("TPP_WinnerParty", "TPP_WinnerParty");
            tableMapping.ColumnMappings.Add("TPP_WinnerVotes", "TPP_WinnerVotes");
            tableMapping.ColumnMappings.Add("TPP_Winner_Percent", "TPP_Winner_Percent");
            tableMapping.ColumnMappings.Add("TPP_Loser_CandidateFirstN", "TPP_Loser_CandidateFirstN");
            tableMapping.ColumnMappings.Add("TPP_LoserCandidateLastN", "TPP_LoserCandidateLastN");
            tableMapping.ColumnMappings.Add("TPP_LoserParty", "TPP_LoserParty");
            tableMapping.ColumnMappings.Add("TPP_LoserVotes", "TPP_LoserVotes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `StateResults2006_QLD` WHERE ((`StateElectorateName` = ?) AND ((? = 1 AND `BoothsIn` IS NULL) OR (`BoothsIn` = ?)) AND ((? = 1 AND `TPP_WinnerCandidateFirstN` IS NULL) OR (`TPP_WinnerCandidateFirstN` = ?)) AND ((? = 1 AND `TPP_WinnerCandidateLastN` IS NULL) OR (`TPP_WinnerCandidateLastN` = ?)) AND ((? = 1 AND `TPP_WinnerParty` IS NULL) OR (`TPP_WinnerParty` = ?)) AND ((? = 1 AND `TPP_WinnerVotes` IS NULL) OR (`TPP_WinnerVotes` = ?)) AND ((? = 1 AND `TPP_Winner_Percent` IS NULL) OR (`TPP_Winner_Percent` = ?)) AND ((? = 1 AND `TPP_Loser_CandidateFirstN` IS NULL) OR (`TPP_Loser_CandidateFirstN` = ?)) AND ((? = 1 AND `TPP_LoserCandidateLastN` IS NULL) OR (`TPP_LoserCandidateLastN` = ?)) AND ((? = 1 AND `TPP_LoserParty` IS NULL) OR (`TPP_LoserParty` = ?)) AND ((? = 1 AND `TPP_LoserVotes` IS NULL) OR (`TPP_LoserVotes` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BoothsIn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BoothsIn", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerParty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserParty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserVotes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `StateResults2006_QLD` (`StateElectorateName`, `BoothsIn`, `TPP_WinnerCandidateFirstN`, `TPP_WinnerCandidateLastN`, `TPP_WinnerParty`, `TPP_WinnerVotes`, `TPP_Winner_Percent`, `TPP_Loser_CandidateFirstN`, `TPP_LoserCandidateLastN`, `TPP_LoserParty`, `TPP_LoserVotes`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoothsIn", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `StateResults2006_QLD` SET `StateElectorateName` = ?, `BoothsIn` = ?, `TPP_WinnerCandidateFirstN` = ?, `TPP_WinnerCandidateLastN` = ?, `TPP_WinnerParty` = ?, `TPP_WinnerVotes` = ?, `TPP_Winner_Percent` = ?, `TPP_Loser_CandidateFirstN` = ?, `TPP_LoserCandidateLastN` = ?, `TPP_LoserParty` = ?, `TPP_LoserVotes` = ? WHERE ((`StateElectorateName` = ?) AND ((? = 1 AND `BoothsIn` IS NULL) OR (`BoothsIn` = ?)) AND ((? = 1 AND `TPP_WinnerCandidateFirstN` IS NULL) OR (`TPP_WinnerCandidateFirstN` = ?)) AND ((? = 1 AND `TPP_WinnerCandidateLastN` IS NULL) OR (`TPP_WinnerCandidateLastN` = ?)) AND ((? = 1 AND `TPP_WinnerParty` IS NULL) OR (`TPP_WinnerParty` = ?)) AND ((? = 1 AND `TPP_WinnerVotes` IS NULL) OR (`TPP_WinnerVotes` = ?)) AND ((? = 1 AND `TPP_Winner_Percent` IS NULL) OR (`TPP_Winner_Percent` = ?)) AND ((? = 1 AND `TPP_Loser_CandidateFirstN` IS NULL) OR (`TPP_Loser_CandidateFirstN` = ?)) AND ((? = 1 AND `TPP_LoserCandidateLastN` IS NULL) OR (`TPP_LoserCandidateLastN` = ?)) AND ((? = 1 AND `TPP_LoserParty` IS NULL) OR (`TPP_LoserParty` = ?)) AND ((? = 1 AND `TPP_LoserVotes` IS NULL) OR (`TPP_LoserVotes` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BoothsIn", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TPP_LoserVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StateElectorateName", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StateElectorateName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BoothsIn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BoothsIn", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BoothsIn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerCandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerParty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerParty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_WinnerVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_WinnerVotes", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_Winner_Percent", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "TPP_Winner_Percent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_Loser_CandidateFirstN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_Loser_CandidateFirstN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserCandidateLastN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserCandidateLastN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserParty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserParty", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserParty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TPP_LoserVotes", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TPP_LoserVotes", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TPP_LoserVotes", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::BlackCat.Properties.Settings.Default.BlackcatKMLParserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StateElectorateName, BoothsIn, TPP_WinnerCandidateFirstN, TPP_WinnerCandid" +
                "ateLastN, TPP_WinnerParty, TPP_WinnerVotes, TPP_Winner_Percent, TPP_Loser_Candid" +
                "ateFirstN, TPP_LoserCandidateLastN, TPP_LoserParty, TPP_LoserVotes FROM StateRes" +
                "ults2006_QLD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BlackcatKMLParserDataSet.StateResults2006_QLDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BlackcatKMLParserDataSet.StateResults2006_QLDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BlackcatKMLParserDataSet.StateResults2006_QLDDataTable dataTable = new BlackcatKMLParserDataSet.StateResults2006_QLDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet.StateResults2006_QLDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BlackcatKMLParserDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StateResults2006_QLD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_StateElectorateName, string Original_BoothsIn, string Original_TPP_WinnerCandidateFirstN, string Original_TPP_WinnerCandidateLastN, string Original_TPP_WinnerParty, string Original_TPP_WinnerVotes, global::System.Nullable<decimal> Original_TPP_Winner_Percent, string Original_TPP_Loser_CandidateFirstN, string Original_TPP_LoserCandidateLastN, string Original_TPP_LoserParty, string Original_TPP_LoserVotes) {
            if ((Original_StateElectorateName == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_StateElectorateName));
            }
            if ((Original_BoothsIn == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BoothsIn));
            }
            if ((Original_TPP_WinnerCandidateFirstN == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TPP_WinnerCandidateFirstN));
            }
            if ((Original_TPP_WinnerCandidateLastN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TPP_WinnerCandidateLastN));
            }
            if ((Original_TPP_WinnerParty == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TPP_WinnerParty));
            }
            if ((Original_TPP_WinnerVotes == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_TPP_WinnerVotes));
            }
            if ((Original_TPP_Winner_Percent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_TPP_Winner_Percent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TPP_Loser_CandidateFirstN == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_TPP_Loser_CandidateFirstN));
            }
            if ((Original_TPP_LoserCandidateLastN == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TPP_LoserCandidateLastN));
            }
            if ((Original_TPP_LoserParty == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_TPP_LoserParty));
            }
            if ((Original_TPP_LoserVotes == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TPP_LoserVotes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string StateElectorateName, string BoothsIn, string TPP_WinnerCandidateFirstN, string TPP_WinnerCandidateLastN, string TPP_WinnerParty, string TPP_WinnerVotes, global::System.Nullable<decimal> TPP_Winner_Percent, string TPP_Loser_CandidateFirstN, string TPP_LoserCandidateLastN, string TPP_LoserParty, string TPP_LoserVotes) {
            if ((StateElectorateName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(StateElectorateName));
            }
            if ((BoothsIn == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BoothsIn));
            }
            if ((TPP_WinnerCandidateFirstN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TPP_WinnerCandidateFirstN));
            }
            if ((TPP_WinnerCandidateLastN == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TPP_WinnerCandidateLastN));
            }
            if ((TPP_WinnerParty == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TPP_WinnerParty));
            }
            if ((TPP_WinnerVotes == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TPP_WinnerVotes));
            }
            if ((TPP_Winner_Percent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TPP_Winner_Percent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TPP_Loser_CandidateFirstN == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TPP_Loser_CandidateFirstN));
            }
            if ((TPP_LoserCandidateLastN == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TPP_LoserCandidateLastN));
            }
            if ((TPP_LoserParty == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(TPP_LoserParty));
            }
            if ((TPP_LoserVotes == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TPP_LoserVotes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StateElectorateName, 
                    string BoothsIn, 
                    string TPP_WinnerCandidateFirstN, 
                    string TPP_WinnerCandidateLastN, 
                    string TPP_WinnerParty, 
                    string TPP_WinnerVotes, 
                    global::System.Nullable<decimal> TPP_Winner_Percent, 
                    string TPP_Loser_CandidateFirstN, 
                    string TPP_LoserCandidateLastN, 
                    string TPP_LoserParty, 
                    string TPP_LoserVotes, 
                    string Original_StateElectorateName, 
                    string Original_BoothsIn, 
                    string Original_TPP_WinnerCandidateFirstN, 
                    string Original_TPP_WinnerCandidateLastN, 
                    string Original_TPP_WinnerParty, 
                    string Original_TPP_WinnerVotes, 
                    global::System.Nullable<decimal> Original_TPP_Winner_Percent, 
                    string Original_TPP_Loser_CandidateFirstN, 
                    string Original_TPP_LoserCandidateLastN, 
                    string Original_TPP_LoserParty, 
                    string Original_TPP_LoserVotes) {
            if ((StateElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(StateElectorateName));
            }
            if ((BoothsIn == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BoothsIn));
            }
            if ((TPP_WinnerCandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TPP_WinnerCandidateFirstN));
            }
            if ((TPP_WinnerCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TPP_WinnerCandidateLastN));
            }
            if ((TPP_WinnerParty == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TPP_WinnerParty));
            }
            if ((TPP_WinnerVotes == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TPP_WinnerVotes));
            }
            if ((TPP_Winner_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(TPP_Winner_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TPP_Loser_CandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TPP_Loser_CandidateFirstN));
            }
            if ((TPP_LoserCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TPP_LoserCandidateLastN));
            }
            if ((TPP_LoserParty == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(TPP_LoserParty));
            }
            if ((TPP_LoserVotes == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TPP_LoserVotes));
            }
            if ((Original_StateElectorateName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_StateElectorateName));
            }
            if ((Original_BoothsIn == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_BoothsIn));
            }
            if ((Original_TPP_WinnerCandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_TPP_WinnerCandidateFirstN));
            }
            if ((Original_TPP_WinnerCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_TPP_WinnerCandidateLastN));
            }
            if ((Original_TPP_WinnerParty == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_TPP_WinnerParty));
            }
            if ((Original_TPP_WinnerVotes == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_TPP_WinnerVotes));
            }
            if ((Original_TPP_Winner_Percent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_TPP_Winner_Percent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_TPP_Loser_CandidateFirstN == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_TPP_Loser_CandidateFirstN));
            }
            if ((Original_TPP_LoserCandidateLastN == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_TPP_LoserCandidateLastN));
            }
            if ((Original_TPP_LoserParty == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_TPP_LoserParty));
            }
            if ((Original_TPP_LoserVotes == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_TPP_LoserVotes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BoothsIn, 
                    string TPP_WinnerCandidateFirstN, 
                    string TPP_WinnerCandidateLastN, 
                    string TPP_WinnerParty, 
                    string TPP_WinnerVotes, 
                    global::System.Nullable<decimal> TPP_Winner_Percent, 
                    string TPP_Loser_CandidateFirstN, 
                    string TPP_LoserCandidateLastN, 
                    string TPP_LoserParty, 
                    string TPP_LoserVotes, 
                    string Original_StateElectorateName, 
                    string Original_BoothsIn, 
                    string Original_TPP_WinnerCandidateFirstN, 
                    string Original_TPP_WinnerCandidateLastN, 
                    string Original_TPP_WinnerParty, 
                    string Original_TPP_WinnerVotes, 
                    global::System.Nullable<decimal> Original_TPP_Winner_Percent, 
                    string Original_TPP_Loser_CandidateFirstN, 
                    string Original_TPP_LoserCandidateLastN, 
                    string Original_TPP_LoserParty, 
                    string Original_TPP_LoserVotes) {
            return this.Update(Original_StateElectorateName, BoothsIn, TPP_WinnerCandidateFirstN, TPP_WinnerCandidateLastN, TPP_WinnerParty, TPP_WinnerVotes, TPP_Winner_Percent, TPP_Loser_CandidateFirstN, TPP_LoserCandidateLastN, TPP_LoserParty, TPP_LoserVotes, Original_StateElectorateName, Original_BoothsIn, Original_TPP_WinnerCandidateFirstN, Original_TPP_WinnerCandidateLastN, Original_TPP_WinnerParty, Original_TPP_WinnerVotes, Original_TPP_Winner_Percent, Original_TPP_Loser_CandidateFirstN, Original_TPP_LoserCandidateLastN, Original_TPP_LoserParty, Original_TPP_LoserVotes);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ElectorateMappingTableAdapter _electorateMappingTableAdapter;
        
        private FederalResults2004_NationalTableAdapter _federalResults2004_NationalTableAdapter;
        
        private StateResults2006_QLDTableAdapter _stateResults2006_QLDTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ElectorateMappingTableAdapter ElectorateMappingTableAdapter {
            get {
                return this._electorateMappingTableAdapter;
            }
            set {
                this._electorateMappingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public FederalResults2004_NationalTableAdapter FederalResults2004_NationalTableAdapter {
            get {
                return this._federalResults2004_NationalTableAdapter;
            }
            set {
                this._federalResults2004_NationalTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public StateResults2006_QLDTableAdapter StateResults2006_QLDTableAdapter {
            get {
                return this._stateResults2006_QLDTableAdapter;
            }
            set {
                this._stateResults2006_QLDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._electorateMappingTableAdapter != null) 
                            && (this._electorateMappingTableAdapter.Connection != null))) {
                    return this._electorateMappingTableAdapter.Connection;
                }
                if (((this._federalResults2004_NationalTableAdapter != null) 
                            && (this._federalResults2004_NationalTableAdapter.Connection != null))) {
                    return this._federalResults2004_NationalTableAdapter.Connection;
                }
                if (((this._stateResults2006_QLDTableAdapter != null) 
                            && (this._stateResults2006_QLDTableAdapter.Connection != null))) {
                    return this._stateResults2006_QLDTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._electorateMappingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._federalResults2004_NationalTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stateResults2006_QLDTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(BlackcatKMLParserDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._stateResults2006_QLDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StateResults2006_QLD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stateResults2006_QLDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._federalResults2004_NationalTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FederalResults2004_National.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._federalResults2004_NationalTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._electorateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ElectorateMapping.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._electorateMappingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(BlackcatKMLParserDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._stateResults2006_QLDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StateResults2006_QLD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stateResults2006_QLDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._federalResults2004_NationalTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FederalResults2004_National.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._federalResults2004_NationalTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._electorateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ElectorateMapping.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._electorateMappingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(BlackcatKMLParserDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._electorateMappingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ElectorateMapping.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._electorateMappingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._federalResults2004_NationalTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FederalResults2004_National.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._federalResults2004_NationalTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stateResults2006_QLDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StateResults2006_QLD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stateResults2006_QLDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(BlackcatKMLParserDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._electorateMappingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._electorateMappingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._federalResults2004_NationalTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._federalResults2004_NationalTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stateResults2006_QLDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stateResults2006_QLDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._electorateMappingTableAdapter != null)) {
                    revertConnections.Add(this._electorateMappingTableAdapter, this._electorateMappingTableAdapter.Connection);
                    this._electorateMappingTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._electorateMappingTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._electorateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._electorateMappingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._electorateMappingTableAdapter.Adapter);
                    }
                }
                if ((this._federalResults2004_NationalTableAdapter != null)) {
                    revertConnections.Add(this._federalResults2004_NationalTableAdapter, this._federalResults2004_NationalTableAdapter.Connection);
                    this._federalResults2004_NationalTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._federalResults2004_NationalTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._federalResults2004_NationalTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._federalResults2004_NationalTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._federalResults2004_NationalTableAdapter.Adapter);
                    }
                }
                if ((this._stateResults2006_QLDTableAdapter != null)) {
                    revertConnections.Add(this._stateResults2006_QLDTableAdapter, this._stateResults2006_QLDTableAdapter.Connection);
                    this._stateResults2006_QLDTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._stateResults2006_QLDTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._stateResults2006_QLDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stateResults2006_QLDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stateResults2006_QLDTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._electorateMappingTableAdapter != null)) {
                    this._electorateMappingTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._electorateMappingTableAdapter]));
                    this._electorateMappingTableAdapter.Transaction = null;
                }
                if ((this._federalResults2004_NationalTableAdapter != null)) {
                    this._federalResults2004_NationalTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._federalResults2004_NationalTableAdapter]));
                    this._federalResults2004_NationalTableAdapter.Transaction = null;
                }
                if ((this._stateResults2006_QLDTableAdapter != null)) {
                    this._stateResults2006_QLDTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._stateResults2006_QLDTableAdapter]));
                    this._stateResults2006_QLDTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591