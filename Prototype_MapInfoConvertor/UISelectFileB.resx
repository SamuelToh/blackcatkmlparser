<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAB5AHkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3DtRRRQAUHAyT0qjHqKHfvHIPy4715p43+KMdrK9hoipd3QO0
        uDmKM/h98/p/KgEr7Ho+pa3Y6dA09zPFHEvWSRwiD8TXA6z8X9ItmZLLz7xh/wA8U2J/303P5CvI9QuL
        /WLn7VrN5LcS9lLcL7AdFHsBUlpYyOqtbwYRpFi8zHAY9AWrGdeMT0KWXVJq8/dX4nY3Xxb1icn7JpMS
        r2M0jyfy2iqR+JnignP2Owx6eU3/AMXWKNMm89YZWVXMzQnvhgAf1zxUttpSXIjKXHDWrTk7OAQcFevP
        +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
</value>
  </data>
  <metadata name="openExistKMLFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>